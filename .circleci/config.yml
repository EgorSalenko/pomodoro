version: 2
jobs:
  deploy:
    docker:
    - image: google/cloud-sdk
    steps:
    - run: |
        echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
        gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
        gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
  build:
    docker:
    - image: circleci/android:api-28

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "build.gradle" }}
    - run: ./gradlew dependencies

    - save_cache:
        paths:
        - ~/.gradle
        key: v1-dependencies-{{ checksum "build.gradle" }}
    - run:
        name: Clean Project
        command: ./gradlew clean
    - run:
        name: Build Debug APK
        command: ./gradlew assembleDebug
    - run:
         name: Store Google Service Account
         command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
    - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
    - run:
        name: Test with Firebase Test Lab
        command: >
          sudo gcloud firebase test android run
            --app <local_server_path>/<app_apk>.apk
            --test <local_server_path>/<app_test_apk>.apk
            --results-bucket cloud-test-${GOOGLE_PROJECT_ID}
    - run:
        name: Install gsutil dependency and copy test results data
        command: |
          sudo pip install -U crcmod
          sudo gsutil -m cp -r -U `sudo gsutil ls gs://[BUCKET_NAME]/[OBJECT_NAME] | tail -1` ${CIRCLE_ARTIFACTS}/ | true