version: 2
defaults: &defaults
  working_directory: ~/src
  docker:
  - image: circleci/android:api-28
  environment:
    JVM_OPTS: -Xmx3200m
    TERM: dumb

jobs:

  build:
    <<: *defaults

    steps:
    - attach_workspace:
        at: /home/circleci/
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "build.gradle" }}
    - run:
        name: Clean Project
        command: ./gradlew clean
    - run:
        name: Build Dev Debug APK
        command: ./gradlew assembleDebug
    - persist_to_workspace:
        root: /home/circleci/
        paths:
        - src/
    - store_artifacts:
        path: ~/src/app/build/outputs/apk/debug/
        destination: apk

  buildInstrumentation:
    <<: *defaults

    steps:
    - attach_workspace:
        at: /home/circleci/
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "build.gradle" }}
    - run:
        name: Clean Project
        command: ./gradlew clean
    - run:
        name: Build Instrumentation Debug APK
        command: ./gradlew assembleDebugAndroidTest
    - persist_to_workspace:
        root: /home/circleci/
        paths:
        - src/
    - store_artifacts:
        path: ~/src/app/build/outputs/apk/androidTest/debug/
        destination: apk/test

  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
     - run: |
        echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
        gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
        gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

  test:
    <<: *defaults

    steps:
    - run:
         name: Store Google Service Account
         command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
    - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
    - run:
        name: Test with Firebase Test Lab
        command: sudo gcloud firebase test android run --app src/app/build/outputs/apk/debug/app-debug.apk --test src/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk --results-bucket cloud-test-${GOOGLE_PROJECT_ID} --type instrumentation
    - run:
        name: Install gsutil dependency and copy test results data
        command: |
          sudo pip install -U crcmod
          sudo gsutil -m cp -r -U `sudo gsutil ls gs://[pomodoro-f4d90.appspot.com]/[test-result-data] | tail -1` ${CIRCLE_ARTIFACTS}/ | true

workflows:
  version: 2
  build_and_test:
    jobs:
    - teCmd
    - build
    - buildInstrumentation
    - deploy:
        requires:
          - build
          - buildInstrumentation
    - test:
        requires:
          - deploy